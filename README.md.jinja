{{JINJA_TREE_STYLE1_GENERATED_COMMENT}}

# stlog-fastapi-middlewares

![Python Badge](https://raw.githubusercontent.com/fabien-marty/common/refs/heads/main/badges/python310plus.svg)
[![UV Badge](https://raw.githubusercontent.com/fabien-marty/common/refs/heads/main/badges/uv.svg)](https://docs.astral.sh/uv/)
[![Mergify Badge](https://raw.githubusercontent.com/fabien-marty/common/refs/heads/main/badges/mergify.svg)](https://mergify.com/)
[![Renovate Badge](https://raw.githubusercontent.com/fabien-marty/common/refs/heads/main/badges/renovate.svg)](https://docs.renovatebot.com/)
[![MIT Licensed](https://raw.githubusercontent.com/fabien-marty/common/refs/heads/main/badges/mit.svg)](https://en.wikipedia.org/wiki/MIT_License)

FastAPI/starlette middlewares to improve logging with [stlog](https://github.com/fabien-marty/stlog) library.

## Installation

`pip install stlog-fastapi-middlewares`

(or equivalent command for your favorite package manager)

## Usage (with FastAPI)

```python
{{ "cat doc/usage.py"|shell() }}
```

## Reference

We provide 3 independent middlewares.

### `CustomExceptionHandlingMiddleware`

This middleware logs exceptions to structured logs.

No extra option is available.

Example:

```python
{{ "cat doc/usage1.py"|shell() }}
```

### `AccessLogMiddleware`

This middleware logs access to the application (to get access logs in JSON format for example).

You can optionally provide an `ignore_hook` option to ignore (for access log only!) some URLs.

Example:

```python
{{ "cat doc/usage2.py"|shell() }}
```

> [!NOTE]
> As `FastAPI` or `uvicorn` already outputs some access logs, you may want to disable them!
> For example, with `uvicorn`, you can use the `--no-access-log` flag.

### `LogContextMiddleware`

This middleware adds some request context to structured logs (think of automatic request id, process id...).

There are multiple options to customize the middleware. See [the corresponding code for reference](stlog_fastapi_middlewares/context.py).

Example:

```python
{{ "cat doc/usage3.py"|shell() }}
```
